// Generated from ./src/grammar/Decaf.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002-\u00f6\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
    "\t#\u0004$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004",
    "*\t*\u0004+\t+\u0004,\t,\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004",
    "\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007",
    "\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003",
    "\f\u0003\f\u0003\f\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\u000e",
    "\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012",
    "\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014",
    "\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016",
    "\u0003\u0017\u0003\u0017\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019",
    "\u0003\u001a\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001c\u0003\u001c",
    "\u0003\u001d\u0003\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001f",
    "\u0003\u001f\u0003\u001f\u0003 \u0003 \u0003 \u0003!\u0003!\u0003!\u0003",
    "\"\u0003\"\u0003\"\u0003#\u0003#\u0003#\u0003$\u0003$\u0003%\u0003%",
    "\u0003&\u0003&\u0003&\u0003&\u0003&\u0003\'\u0003\'\u0003\'\u0003\'",
    "\u0003\'\u0003\'\u0003(\u0003(\u0007(\u00df\n(\f(\u000e(\u00e2\u000b",
    "(\u0003)\u0006)\u00e5\n)\r)\u000e)\u00e6\u0003*\u0005*\u00ea\n*\u0003",
    "+\u0003+\u0005+\u00ee\n+\u0003,\u0006,\u00f1\n,\r,\u000e,\u00f2\u0003",
    ",\u0003,\u0002\u0002-\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b",
    "\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b",
    "\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+",
    "\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d9\u001e;\u001f= ?!A",
    "\"C#E$G%I&K\'M(O)Q*S+U,W-\u0003\u0002\u0005\u0003\u00022;\u0005\u0002",
    "C\\aac|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002\u00f9\u0002\u0003",
    "\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007",
    "\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b",
    "\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f",
    "\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013",
    "\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017",
    "\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b",
    "\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f",
    "\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003",
    "\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002",
    "\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002",
    "\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002\u0002",
    "\u00021\u0003\u0002\u0002\u0002\u00023\u0003\u0002\u0002\u0002\u0002",
    "5\u0003\u0002\u0002\u0002\u00027\u0003\u0002\u0002\u0002\u00029\u0003",
    "\u0002\u0002\u0002\u0002;\u0003\u0002\u0002\u0002\u0002=\u0003\u0002",
    "\u0002\u0002\u0002?\u0003\u0002\u0002\u0002\u0002A\u0003\u0002\u0002",
    "\u0002\u0002C\u0003\u0002\u0002\u0002\u0002E\u0003\u0002\u0002\u0002",
    "\u0002G\u0003\u0002\u0002\u0002\u0002I\u0003\u0002\u0002\u0002\u0002",
    "K\u0003\u0002\u0002\u0002\u0002M\u0003\u0002\u0002\u0002\u0002O\u0003",
    "\u0002\u0002\u0002\u0002Q\u0003\u0002\u0002\u0002\u0002S\u0003\u0002",
    "\u0002\u0002\u0002U\u0003\u0002\u0002\u0002\u0002W\u0003\u0002\u0002",
    "\u0002\u0003Y\u0003\u0002\u0002\u0002\u0005_\u0003\u0002\u0002\u0002",
    "\u0007g\u0003\u0002\u0002\u0002\ti\u0003\u0002\u0002\u0002\u000bk\u0003",
    "\u0002\u0002\u0002\rm\u0003\u0002\u0002\u0002\u000fo\u0003\u0002\u0002",
    "\u0002\u0011q\u0003\u0002\u0002\u0002\u0013x\u0003\u0002\u0002\u0002",
    "\u0015|\u0003\u0002\u0002\u0002\u0017\u0081\u0003\u0002\u0002\u0002",
    "\u0019\u0089\u0003\u0002\u0002\u0002\u001b\u008e\u0003\u0002\u0002\u0002",
    "\u001d\u0090\u0003\u0002\u0002\u0002\u001f\u0092\u0003\u0002\u0002\u0002",
    "!\u0094\u0003\u0002\u0002\u0002#\u0097\u0003\u0002\u0002\u0002%\u009c",
    "\u0003\u0002\u0002\u0002\'\u00a2\u0003\u0002\u0002\u0002)\u00a9\u0003",
    "\u0002\u0002\u0002+\u00ab\u0003\u0002\u0002\u0002-\u00ad\u0003\u0002",
    "\u0002\u0002/\u00af\u0003\u0002\u0002\u00021\u00b1\u0003\u0002\u0002",
    "\u00023\u00b3\u0003\u0002\u0002\u00025\u00b5\u0003\u0002\u0002\u0002",
    "7\u00b7\u0003\u0002\u0002\u00029\u00b9\u0003\u0002\u0002\u0002;\u00bb",
    "\u0003\u0002\u0002\u0002=\u00be\u0003\u0002\u0002\u0002?\u00c1\u0003",
    "\u0002\u0002\u0002A\u00c4\u0003\u0002\u0002\u0002C\u00c7\u0003\u0002",
    "\u0002\u0002E\u00ca\u0003\u0002\u0002\u0002G\u00cd\u0003\u0002\u0002",
    "\u0002I\u00cf\u0003\u0002\u0002\u0002K\u00d1\u0003\u0002\u0002\u0002",
    "M\u00d6\u0003\u0002\u0002\u0002O\u00dc\u0003\u0002\u0002\u0002Q\u00e4",
    "\u0003\u0002\u0002\u0002S\u00e9\u0003\u0002\u0002\u0002U\u00ed\u0003",
    "\u0002\u0002\u0002W\u00f0\u0003\u0002\u0002\u0002YZ\u0007e\u0002\u0002",
    "Z[\u0007n\u0002\u0002[\\\u0007c\u0002\u0002\\]\u0007u\u0002\u0002]^",
    "\u0007u\u0002\u0002^\u0004\u0003\u0002\u0002\u0002_`\u0007R\u0002\u0002",
    "`a\u0007t\u0002\u0002ab\u0007q\u0002\u0002bc\u0007i\u0002\u0002cd\u0007",
    "t\u0002\u0002de\u0007c\u0002\u0002ef\u0007o\u0002\u0002f\u0006\u0003",
    "\u0002\u0002\u0002gh\u0007}\u0002\u0002h\b\u0003\u0002\u0002\u0002i",
    "j\u0007\u007f\u0002\u0002j\n\u0003\u0002\u0002\u0002kl\u0007=\u0002",
    "\u0002l\f\u0003\u0002\u0002\u0002mn\u0007]\u0002\u0002n\u000e\u0003",
    "\u0002\u0002\u0002op\u0007_\u0002\u0002p\u0010\u0003\u0002\u0002\u0002",
    "qr\u0007u\u0002\u0002rs\u0007v\u0002\u0002st\u0007t\u0002\u0002tu\u0007",
    "w\u0002\u0002uv\u0007e\u0002\u0002vw\u0007v\u0002\u0002w\u0012\u0003",
    "\u0002\u0002\u0002xy\u0007k\u0002\u0002yz\u0007p\u0002\u0002z{\u0007",
    "v\u0002\u0002{\u0014\u0003\u0002\u0002\u0002|}\u0007e\u0002\u0002}~",
    "\u0007j\u0002\u0002~\u007f\u0007c\u0002\u0002\u007f\u0080\u0007t\u0002",
    "\u0002\u0080\u0016\u0003\u0002\u0002\u0002\u0081\u0082\u0007d\u0002",
    "\u0002\u0082\u0083\u0007q\u0002\u0002\u0083\u0084\u0007q\u0002\u0002",
    "\u0084\u0085\u0007n\u0002\u0002\u0085\u0086\u0007g\u0002\u0002\u0086",
    "\u0087\u0007c\u0002\u0002\u0087\u0088\u0007p\u0002\u0002\u0088\u0018",
    "\u0003\u0002\u0002\u0002\u0089\u008a\u0007x\u0002\u0002\u008a\u008b",
    "\u0007q\u0002\u0002\u008b\u008c\u0007k\u0002\u0002\u008c\u008d\u0007",
    "f\u0002\u0002\u008d\u001a\u0003\u0002\u0002\u0002\u008e\u008f\u0007",
    "*\u0002\u0002\u008f\u001c\u0003\u0002\u0002\u0002\u0090\u0091\u0007",
    ".\u0002\u0002\u0091\u001e\u0003\u0002\u0002\u0002\u0092\u0093\u0007",
    "+\u0002\u0002\u0093 \u0003\u0002\u0002\u0002\u0094\u0095\u0007k\u0002",
    "\u0002\u0095\u0096\u0007h\u0002\u0002\u0096\"\u0003\u0002\u0002\u0002",
    "\u0097\u0098\u0007g\u0002\u0002\u0098\u0099\u0007n\u0002\u0002\u0099",
    "\u009a\u0007u\u0002\u0002\u009a\u009b\u0007g\u0002\u0002\u009b$\u0003",
    "\u0002\u0002\u0002\u009c\u009d\u0007y\u0002\u0002\u009d\u009e\u0007",
    "j\u0002\u0002\u009e\u009f\u0007k\u0002\u0002\u009f\u00a0\u0007n\u0002",
    "\u0002\u00a0\u00a1\u0007g\u0002\u0002\u00a1&\u0003\u0002\u0002\u0002",
    "\u00a2\u00a3\u0007t\u0002\u0002\u00a3\u00a4\u0007g\u0002\u0002\u00a4",
    "\u00a5\u0007v\u0002\u0002\u00a5\u00a6\u0007w\u0002\u0002\u00a6\u00a7",
    "\u0007t\u0002\u0002\u00a7\u00a8\u0007p\u0002\u0002\u00a8(\u0003\u0002",
    "\u0002\u0002\u00a9\u00aa\u0007?\u0002\u0002\u00aa*\u0003\u0002\u0002",
    "\u0002\u00ab\u00ac\u00070\u0002\u0002\u00ac,\u0003\u0002\u0002\u0002",
    "\u00ad\u00ae\u0007,\u0002\u0002\u00ae.\u0003\u0002\u0002\u0002\u00af",
    "\u00b0\u00071\u0002\u0002\u00b00\u0003\u0002\u0002\u0002\u00b1\u00b2",
    "\u0007\'\u0002\u0002\u00b22\u0003\u0002\u0002\u0002\u00b3\u00b4\u0007",
    "-\u0002\u0002\u00b44\u0003\u0002\u0002\u0002\u00b5\u00b6\u0007/\u0002",
    "\u0002\u00b66\u0003\u0002\u0002\u0002\u00b7\u00b8\u0007>\u0002\u0002",
    "\u00b88\u0003\u0002\u0002\u0002\u00b9\u00ba\u0007@\u0002\u0002\u00ba",
    ":\u0003\u0002\u0002\u0002\u00bb\u00bc\u0007>\u0002\u0002\u00bc\u00bd",
    "\u0007?\u0002\u0002\u00bd<\u0003\u0002\u0002\u0002\u00be\u00bf\u0007",
    "@\u0002\u0002\u00bf\u00c0\u0007?\u0002\u0002\u00c0>\u0003\u0002\u0002",
    "\u0002\u00c1\u00c2\u0007?\u0002\u0002\u00c2\u00c3\u0007?\u0002\u0002",
    "\u00c3@\u0003\u0002\u0002\u0002\u00c4\u00c5\u0007#\u0002\u0002\u00c5",
    "\u00c6\u0007?\u0002\u0002\u00c6B\u0003\u0002\u0002\u0002\u00c7\u00c8",
    "\u0007(\u0002\u0002\u00c8\u00c9\u0007(\u0002\u0002\u00c9D\u0003\u0002",
    "\u0002\u0002\u00ca\u00cb\u0007~\u0002\u0002\u00cb\u00cc\u0007~\u0002",
    "\u0002\u00ccF\u0003\u0002\u0002\u0002\u00cd\u00ce\u0007#\u0002\u0002",
    "\u00ceH\u0003\u0002\u0002\u0002\u00cf\u00d0\u0007)\u0002\u0002\u00d0",
    "J\u0003\u0002\u0002\u0002\u00d1\u00d2\u0007v\u0002\u0002\u00d2\u00d3",
    "\u0007t\u0002\u0002\u00d3\u00d4\u0007w\u0002\u0002\u00d4\u00d5\u0007",
    "g\u0002\u0002\u00d5L\u0003\u0002\u0002\u0002\u00d6\u00d7\u0007h\u0002",
    "\u0002\u00d7\u00d8\u0007c\u0002\u0002\u00d8\u00d9\u0007n\u0002\u0002",
    "\u00d9\u00da\u0007u\u0002\u0002\u00da\u00db\u0007g\u0002\u0002\u00db",
    "N\u0003\u0002\u0002\u0002\u00dc\u00e0\u0005S*\u0002\u00dd\u00df\u0005",
    "U+\u0002\u00de\u00dd\u0003\u0002\u0002\u0002\u00df\u00e2\u0003\u0002",
    "\u0002\u0002\u00e0\u00de\u0003\u0002\u0002\u0002\u00e0\u00e1\u0003\u0002",
    "\u0002\u0002\u00e1P\u0003\u0002\u0002\u0002\u00e2\u00e0\u0003\u0002",
    "\u0002\u0002\u00e3\u00e5\t\u0002\u0002\u0002\u00e4\u00e3\u0003\u0002",
    "\u0002\u0002\u00e5\u00e6\u0003\u0002\u0002\u0002\u00e6\u00e4\u0003\u0002",
    "\u0002\u0002\u00e6\u00e7\u0003\u0002\u0002\u0002\u00e7R\u0003\u0002",
    "\u0002\u0002\u00e8\u00ea\t\u0003\u0002\u0002\u00e9\u00e8\u0003\u0002",
    "\u0002\u0002\u00eaT\u0003\u0002\u0002\u0002\u00eb\u00ee\u0005S*\u0002",
    "\u00ec\u00ee\u0005Q)\u0002\u00ed\u00eb\u0003\u0002\u0002\u0002\u00ed",
    "\u00ec\u0003\u0002\u0002\u0002\u00eeV\u0003\u0002\u0002\u0002\u00ef",
    "\u00f1\t\u0004\u0002\u0002\u00f0\u00ef\u0003\u0002\u0002\u0002\u00f1",
    "\u00f2\u0003\u0002\u0002\u0002\u00f2\u00f0\u0003\u0002\u0002\u0002\u00f2",
    "\u00f3\u0003\u0002\u0002\u0002\u00f3\u00f4\u0003\u0002\u0002\u0002\u00f4",
    "\u00f5\b,\u0002\u0002\u00f5X\u0003\u0002\u0002\u0002\b\u0002\u00e0\u00e6",
    "\u00e9\u00ed\u00f2\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class DecafLexer extends antlr4.Lexer {

    static grammarFileName = "Decaf.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'class'", "'Program'", "'{'", "'}'", "';'", 
                         "'['", "']'", "'struct'", "'int'", "'char'", "'boolean'", 
                         "'void'", "'('", "','", "')'", "'if'", "'else'", 
                         "'while'", "'return'", "'='", "'.'", "'*'", "'/'", 
                         "'%'", "'+'", "'-'", "'<'", "'>'", "'<='", "'>='", 
                         "'=='", "'!='", "'&&'", "'||'", "'!'", "'''", "'true'", 
                         "'false'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, "ID", 
                          "DIGIT", "LETTER", "ALPHA_NUM", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "ID", "DIGIT", "LETTER", "ALPHA_NUM", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

DecafLexer.EOF = antlr4.Token.EOF;
DecafLexer.T__0 = 1;
DecafLexer.T__1 = 2;
DecafLexer.T__2 = 3;
DecafLexer.T__3 = 4;
DecafLexer.T__4 = 5;
DecafLexer.T__5 = 6;
DecafLexer.T__6 = 7;
DecafLexer.T__7 = 8;
DecafLexer.T__8 = 9;
DecafLexer.T__9 = 10;
DecafLexer.T__10 = 11;
DecafLexer.T__11 = 12;
DecafLexer.T__12 = 13;
DecafLexer.T__13 = 14;
DecafLexer.T__14 = 15;
DecafLexer.T__15 = 16;
DecafLexer.T__16 = 17;
DecafLexer.T__17 = 18;
DecafLexer.T__18 = 19;
DecafLexer.T__19 = 20;
DecafLexer.T__20 = 21;
DecafLexer.T__21 = 22;
DecafLexer.T__22 = 23;
DecafLexer.T__23 = 24;
DecafLexer.T__24 = 25;
DecafLexer.T__25 = 26;
DecafLexer.T__26 = 27;
DecafLexer.T__27 = 28;
DecafLexer.T__28 = 29;
DecafLexer.T__29 = 30;
DecafLexer.T__30 = 31;
DecafLexer.T__31 = 32;
DecafLexer.T__32 = 33;
DecafLexer.T__33 = 34;
DecafLexer.T__34 = 35;
DecafLexer.T__35 = 36;
DecafLexer.T__36 = 37;
DecafLexer.T__37 = 38;
DecafLexer.ID = 39;
DecafLexer.DIGIT = 40;
DecafLexer.LETTER = 41;
DecafLexer.ALPHA_NUM = 42;
DecafLexer.WS = 43;



